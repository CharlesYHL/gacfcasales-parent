<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gacfcasales.dcsweb.dao.CommoNoDao">

	<!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
	<sql id="Assist">
		<where>
			<foreach collection="require" item="req" separator=" ">
				${req.require} #{req.value}
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
	<sql id="updateAssist">
		<where>
			<foreach collection="assist.require" item="req" separator=" ">
				${req.require} #{req.value}
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>


	<select id="getlock" parameterType="map" resultType="map">
		SELECT *
		FROM TT_BILL_NO WHERE DEALER_CODE=#{dealerCode} and
		BILL_NO_TYPE=#{orderPrefix} and B_YEAR=#{yyyy} and B_MONTH = #{MM} and
		B_DAY = #{dd}
	</select>

	<update id="updateBillNo" parameterType="map">
		update TT_BILL_NO set
		SEQ=#{sequence} where BILL_NO_ID=#{billNoId} and DEALER_CODE
		=#{dealerCode}
	</update>

	<insert id="insertBillNo" parameterType="map">
		insert into TT_BILL_NO
		(BILL_NO_TYPE,B_YEAR,B_MONTH,B_DAY,SEQ,DEALER_CODE,CREATED_AT)
		values(#{orderPrefix},#{yyyy},#{MM},#{dd},#{sequence},#{dealerCode},now());

	</insert>


	<!-- 获取品牌下拉框 -->
	<select id="getBrandList" resultType="map">
		<!-- SELECT DISTINCT m1.GROUP_ID BRAND_ID,m1.GROUP_CODE BRAND_CODE,m1.GROUP_NAME 
			BRAND_NAME FROM tm_vhcl_material_group m1,tm_vhcl_material_group m2 WHERE 
			m1.GROUP_ID = m2.PARENT_GROUP_ID AND m2.GROUP_LEVEL = 2 AND m1.STATUS = '10011001' 
			AND m2.GROUP_TYPE =90081002 -->

		SELECT DISTINCT m1.GROUP_ID BRAND_ID,m1.GROUP_NAME BRAND_NAME FROM
		tm_vhcl_material_group m1,tm_vhcl_material_group m2
		WHERE m1.GROUP_ID =
		m2.PARENT_GROUP_ID AND m2.GROUP_LEVEL = 2
		AND m1.STATUS = '10011001'

	</select>

	<!-- 获取车系下拉框 -->
	<select id="getSeriesList" parameterType="java.lang.String"
		resultType="map">
		<!-- SELECT DISTINCT m2.GROUP_ID SERIES_ID, m2.GROUP_CODE SERIES_CODE ,m2.GROUP_NAME 
			SERIES_NAME FROM tm_vhcl_material_group m1,tm_vhcl_material_group m2 WHERE 
			m1.GROUP_ID = m2.PARENT_GROUP_ID AND m2.GROUP_LEVEL = 2 AND m2.STATUS = '10011001' 
			AND m2.GROUP_TYPE = 90081002 AND m1.GROUP_ID = #{groupId} -->

		SELECT DISTINCT m2.GROUP_ID SERIES_ID,m2.GROUP_NAME SERIES_NAME FROM
		tm_vhcl_material_group m1,tm_vhcl_material_group m2
		WHERE m1.GROUP_ID =
		m2.PARENT_GROUP_ID AND m2.GROUP_LEVEL = 2
		AND m2.STATUS = '10011001'
		AND m1.GROUP_ID=#{groupId}

	</select>
	<select id="getSeriesListA" parameterType="map"
		resultType="map">
		SELECT DISTINCT m2.GROUP_ID SERIES_ID,m2.GROUP_NAME SERIES_NAME FROM
		tm_vhcl_material_group m1,tm_vhcl_material_group m2
		WHERE m1.GROUP_ID =
		m2.PARENT_GROUP_ID AND m2.GROUP_LEVEL = 2
		AND m2.STATUS = '10011001'
		<if test="groupIds != null and groupIds.size > 0 ">
			<!-- AND bsm.DEALER_CODE in #{DEALER_CODE} -->
			AND m1.GROUP_ID in
			<foreach collection="groupIds" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>

		</if>

	</select>

	<!-- 获取车型下拉框 -->
	<select id="getModelList" parameterType="java.lang.String"
		resultType="map">
		SELECT DISTINCT m2.GROUP_ID MODEL_ID,m2.GROUP_CODE
		MODEL_CODE,m2.GROUP_NAME MODEL_NAME
		FROM tm_vhcl_material_group
		m1,tm_vhcl_material_group m2
		WHERE m1.GROUP_ID = m2.PARENT_GROUP_ID
		AND
		m2.GROUP_LEVEL = 3
		AND m2.STATUS = '10011001' AND m1.GROUP_ID =
		#{groupId}
	</select>
	<select id="getModelListA" parameterType="map"
		resultType="map">
		SELECT DISTINCT m2.GROUP_ID MODEL_ID,m2.GROUP_CODE
		MODEL_CODE,m2.GROUP_NAME MODEL_NAME
		FROM tm_vhcl_material_group
		m1,tm_vhcl_material_group m2
		WHERE m1.GROUP_ID = m2.PARENT_GROUP_ID
		AND
		m2.GROUP_LEVEL = 3
		AND m2.STATUS = '10011001' 
		<if test="groupIds != null and groupIds.size > 0 ">
			AND m1.GROUP_ID in
			<foreach collection="groupIds" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>

		</if>
	</select>


	<select id="getModelTableList" parameterType="com.gacfcasales.common.Assist"
		resultType="com.gacfcasales.common.entity.ModelPage">

		<!-- SELECT MODEL_ID, MODEL_CODE, MODEL_NAME, SERIES_ID, SERIES_CODE, SERIES_NAME, 
			BRAND_ID, BRAND_CODE, BRAND_NAME FROM (SELECT model.MODEL_ID,model.MODEL_CODE,model.MODEL_NAME, 
			series.SERIES_ID,series.SERIES_CODE,series.SERIES_NAME, brand.BRAND_ID,brand.BRAND_CODE,brand.BRAND_NAME 
			FROM (SELECT DISTINCT m2.GROUP_ID MODEL_ID,m2.GROUP_CODE MODEL_CODE,m2.GROUP_NAME 
			MODEL_NAME,m1.GROUP_ID SERIES_ID_MODEL FROM tm_vhcl_material_group m1,tm_vhcl_material_group 
			m2 WHERE m1.GROUP_ID = m2.PARENT_GROUP_ID AND m2.GROUP_LEVEL = 3 AND m2.STATUS 
			= '10011001' AND m1.GROUP_TYPE = 90081002) model INNER JOIN (SELECT DISTINCT 
			m2.GROUP_ID SERIES_ID, m2.GROUP_CODE SERIES_CODE ,m2.GROUP_NAME SERIES_NAME,m1.GROUP_ID 
			BRAND_ID_SERIES FROM tm_vhcl_material_group m1,tm_vhcl_material_group m2 
			WHERE m1.GROUP_ID = m2.PARENT_GROUP_ID AND m2.GROUP_LEVEL = 2 AND m2.STATUS 
			= '10011001' AND m2.GROUP_TYPE = 90081002 ) series ON model.SERIES_ID_MODEL 
			= series.SERIES_ID INNER JOIN (SELECT DISTINCT m1.GROUP_ID BRAND_ID,m1.GROUP_CODE 
			BRAND_CODE,m1.GROUP_NAME BRAND_NAME FROM tm_vhcl_material_group m1,tm_vhcl_material_group 
			m2 WHERE m1.GROUP_ID = m2.PARENT_GROUP_ID AND m2.GROUP_LEVEL = 2 AND m1.STATUS 
			= '10011001' AND m2.GROUP_TYPE =90081002) brand ON series.BRAND_ID_SERIES 
			= brand.BRAND_ID) BSM -->

		SELECT
		MODEL_ID,
		MODEL_CODE,
		MODEL_NAME,
		SERIES_ID,
		SERIES_CODE,
		SERIES_NAME,
		BRAND_ID,
		BRAND_CODE,
		BRAND_NAME
		FROM
		(
		SELECT
		model.MODEL_ID,
		model.MODEL_CODE,
		model.MODEL_NAME,
		series.SERIES_ID,
		series.SERIES_CODE,
		series.SERIES_NAME,
		brand.BRAND_ID,
		brand.BRAND_CODE,
		brand.BRAND_NAME
		FROM
		(
		SELECT DISTINCT
		m2.GROUP_ID
		MODEL_ID,
		m2.GROUP_CODE MODEL_CODE,
		m2.GROUP_NAME MODEL_NAME,
		m1.GROUP_ID SERIES_ID_MODEL
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID = m2.PARENT_GROUP_ID
		AND
		m2.GROUP_LEVEL = 3
		AND m2. STATUS = '10011001'
		) model
		INNER JOIN (
		SELECT DISTINCT
		m2.GROUP_ID SERIES_ID,
		m2.GROUP_CODE SERIES_CODE,
		m2.GROUP_NAME SERIES_NAME,
		m1.GROUP_ID BRAND_ID_SERIES
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID =
		m2.PARENT_GROUP_ID
		AND m2.GROUP_LEVEL = 2
		AND m2. STATUS = '10011001'
		)
		series ON model.SERIES_ID_MODEL =
		series.SERIES_ID
		INNER JOIN (
		SELECT
		DISTINCT
		m1.GROUP_ID BRAND_ID,
		m1.GROUP_CODE BRAND_CODE,
		m1.GROUP_NAME
		BRAND_NAME
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID = m2.PARENT_GROUP_ID
		AND m2.GROUP_LEVEL = 2
		AND m1.
		STATUS = '10011001'
		) brand ON series.BRAND_ID_SERIES =
		brand.BRAND_ID
		GROUP BY model.MODEL_ID,model.MODEL_CODE,model.MODEL_NAME
		ORDER BY
		model.MODEL_ID,model.MODEL_CODE,model.MODEL_NAME DESC
		)
		BSM


		<if test="require!=null">
			<include refid="Assist" />
		</if>
		LIMIT
		#{startRow},#{rowSize}
	</select>

	<select id="getModelTableRowCount" parameterType="com.gacfcasales.common.Assist"
		resultType="java.lang.Long">
		<!-- SELECT count(*) FROM (SELECT model.MODEL_ID,model.MODEL_CODE,model.MODEL_NAME, 
			series.SERIES_ID,series.SERIES_CODE,series.SERIES_NAME, brand.BRAND_ID,brand.BRAND_CODE,brand.BRAND_NAME 
			FROM (SELECT DISTINCT m2.GROUP_ID MODEL_ID,m2.GROUP_CODE MODEL_CODE,m2.GROUP_NAME 
			MODEL_NAME,m1.GROUP_ID SERIES_ID_MODEL FROM tm_vhcl_material_group m1,tm_vhcl_material_group 
			m2 WHERE m1.GROUP_ID = m2.PARENT_GROUP_ID AND m2.GROUP_LEVEL = 3 AND m2.STATUS 
			= '10011001' AND m1.GROUP_TYPE = 90081002) model INNER JOIN (SELECT DISTINCT 
			m2.GROUP_ID SERIES_ID, m2.GROUP_CODE SERIES_CODE ,m2.GROUP_NAME SERIES_NAME,m1.GROUP_ID 
			BRAND_ID_SERIES FROM tm_vhcl_material_group m1,tm_vhcl_material_group m2 
			WHERE m1.GROUP_ID = m2.PARENT_GROUP_ID AND m2.GROUP_LEVEL = 2 AND m2.STATUS 
			= '10011001' AND m2.GROUP_TYPE = 90081002 ) series ON model.SERIES_ID_MODEL 
			= series.SERIES_ID INNER JOIN (SELECT DISTINCT m1.GROUP_ID BRAND_ID,m1.GROUP_CODE 
			BRAND_CODE,m1.GROUP_NAME BRAND_NAME FROM tm_vhcl_material_group m1,tm_vhcl_material_group 
			m2 WHERE m1.GROUP_ID = m2.PARENT_GROUP_ID AND m2.GROUP_LEVEL = 2 AND m1.STATUS 
			= '10011001' AND m2.GROUP_TYPE =90081002) brand ON series.BRAND_ID_SERIES 
			= brand.BRAND_ID) BSM -->
		<!-- ORDER BY BSM.MODEL_CODE,BSM.MODEL_NAME DESC -->


		SELECT count(*) FROM
		(
		SELECT
		model.MODEL_ID,
		model.MODEL_CODE,
		model.MODEL_NAME,
		series.SERIES_ID,
		series.SERIES_CODE,
		series.SERIES_NAME,
		brand.BRAND_ID,
		brand.BRAND_CODE,
		brand.BRAND_NAME
		FROM
		(
		SELECT DISTINCT
		m2.GROUP_ID
		MODEL_ID,
		m2.GROUP_CODE MODEL_CODE,
		m2.GROUP_NAME MODEL_NAME,
		m1.GROUP_ID SERIES_ID_MODEL
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID =
		m2.PARENT_GROUP_ID
		AND
		m2.GROUP_LEVEL = 3
		AND m2. STATUS = '10011001'
		)
		model
		INNER JOIN (
		SELECT DISTINCT
		m2.GROUP_ID SERIES_ID,
		m2.GROUP_CODE
		SERIES_CODE,
		m2.GROUP_NAME SERIES_NAME,
		m1.GROUP_ID BRAND_ID_SERIES
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID =
		m2.PARENT_GROUP_ID
		AND m2.GROUP_LEVEL = 2
		AND m2. STATUS = '10011001'
		)
		series ON model.SERIES_ID_MODEL =
		series.SERIES_ID
		INNER JOIN (
		SELECT
		DISTINCT
		m1.GROUP_ID BRAND_ID,
		m1.GROUP_CODE BRAND_CODE,
		m1.GROUP_NAME
		BRAND_NAME
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID = m2.PARENT_GROUP_ID
		AND m2.GROUP_LEVEL = 2
		AND m1.
		STATUS = '10011001'
		) brand ON series.BRAND_ID_SERIES =
		brand.BRAND_ID
		GROUP BY model.MODEL_ID,model.MODEL_CODE,model.MODEL_NAME
		ORDER BY
		model.MODEL_ID,model.MODEL_CODE,model.MODEL_NAME DESC
		) BSM
		<if test="require!=null">
			<include refid="Assist" />
		</if>
	</select>
	
	
	
	<select id="getModelTableListA" parameterType="map"
		resultType="com.gacfcasales.common.entity.ModelPage">
		SELECT
		MODEL_ID,
		MODEL_CODE,
		MODEL_NAME,
		SERIES_ID,
		SERIES_CODE,
		SERIES_NAME,
		BRAND_ID,
		BRAND_CODE,
		BRAND_NAME
		FROM
		(
		SELECT
		model.MODEL_ID,
		model.MODEL_CODE,
		model.MODEL_NAME,
		series.SERIES_ID,
		series.SERIES_CODE,
		series.SERIES_NAME,
		brand.BRAND_ID,
		brand.BRAND_CODE,
		brand.BRAND_NAME
		FROM
		(
		SELECT DISTINCT
		m2.GROUP_ID
		MODEL_ID,
		m2.GROUP_CODE MODEL_CODE,
		m2.GROUP_NAME MODEL_NAME,
		m1.GROUP_ID SERIES_ID_MODEL
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID = m2.PARENT_GROUP_ID
		AND
		m2.GROUP_LEVEL = 3
		AND m2. STATUS = '10011001'
		) model
		INNER JOIN (
		SELECT DISTINCT
		m2.GROUP_ID SERIES_ID,
		m2.GROUP_CODE SERIES_CODE,
		m2.GROUP_NAME SERIES_NAME,
		m1.GROUP_ID BRAND_ID_SERIES
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID =
		m2.PARENT_GROUP_ID
		AND m2.GROUP_LEVEL = 2
		AND m2. STATUS = '10011001'
		)
		series ON model.SERIES_ID_MODEL =
		series.SERIES_ID
		INNER JOIN (
		SELECT
		DISTINCT
		m1.GROUP_ID BRAND_ID,
		m1.GROUP_CODE BRAND_CODE,
		m1.GROUP_NAME
		BRAND_NAME
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID = m2.PARENT_GROUP_ID
		AND m2.GROUP_LEVEL = 2
		AND m1.
		STATUS = '10011001'
		) brand ON series.BRAND_ID_SERIES =
		brand.BRAND_ID
		GROUP BY model.MODEL_ID,model.MODEL_CODE,model.MODEL_NAME
		ORDER BY
		model.MODEL_ID,model.MODEL_CODE,model.MODEL_NAME DESC
		)
		BSM
		
		where 1=1
		<if test="brandIds != null and brandIds.size > 0 ">
			AND BSM.BRAND_ID in
			<foreach collection="brandIds" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>

		</if>
		<if test="seriesIds != null and seriesIds.size > 0 ">
			AND BSM.SERIES_ID in
			<foreach collection="seriesIds" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>

		</if>
		<if test="modelIds != null and modelIds.size > 0 ">
			AND BSM.MODEL_ID in
			<foreach collection="modelIds" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>

		</if>

		LIMIT
		#{startRow},#{rowSize}
	</select>
	
	<select id="getModelTableRowCountA" parameterType="map"
		resultType="java.lang.Long">
		SELECT count(*) FROM
		(
		SELECT
		model.MODEL_ID,
		model.MODEL_CODE,
		model.MODEL_NAME,
		series.SERIES_ID,
		series.SERIES_CODE,
		series.SERIES_NAME,
		brand.BRAND_ID,
		brand.BRAND_CODE,
		brand.BRAND_NAME
		FROM
		(
		SELECT DISTINCT
		m2.GROUP_ID
		MODEL_ID,
		m2.GROUP_CODE MODEL_CODE,
		m2.GROUP_NAME MODEL_NAME,
		m1.GROUP_ID SERIES_ID_MODEL
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID =
		m2.PARENT_GROUP_ID
		AND
		m2.GROUP_LEVEL = 3
		AND m2. STATUS = '10011001'
		)
		model
		INNER JOIN (
		SELECT DISTINCT
		m2.GROUP_ID SERIES_ID,
		m2.GROUP_CODE
		SERIES_CODE,
		m2.GROUP_NAME SERIES_NAME,
		m1.GROUP_ID BRAND_ID_SERIES
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID =
		m2.PARENT_GROUP_ID
		AND m2.GROUP_LEVEL = 2
		AND m2. STATUS = '10011001'
		)
		series ON model.SERIES_ID_MODEL =
		series.SERIES_ID
		INNER JOIN (
		SELECT
		DISTINCT
		m1.GROUP_ID BRAND_ID,
		m1.GROUP_CODE BRAND_CODE,
		m1.GROUP_NAME
		BRAND_NAME
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID = m2.PARENT_GROUP_ID
		AND m2.GROUP_LEVEL = 2
		AND m1.
		STATUS = '10011001'
		) brand ON series.BRAND_ID_SERIES =
		brand.BRAND_ID
		GROUP BY model.MODEL_ID,model.MODEL_CODE,model.MODEL_NAME
		ORDER BY
		model.MODEL_ID,model.MODEL_CODE,model.MODEL_NAME DESC
		) BSM
		where 1=1
		<if test="brandIds != null and brandIds.size > 0 ">
			AND BSM.BRAND_ID in
			<foreach collection="brandIds" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>

		</if>
		<if test="seriesIds != null and seriesIds.size > 0 ">
			AND BSM.SERIES_ID in
			<foreach collection="seriesIds" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>

		</if>
		<if test="modelIds != null and modelIds.size > 0 ">
			AND BSM.MODEL_ID in
			<foreach collection="modelIds" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>

		</if>
	</select>
	
	


	<!-- 按车系查询 -->
	<select id="getSeriesTableList" parameterType="com.gacfcasales.common.Assist"
		resultType="com.gacfcasales.common.entity.ModelPage">

		<!-- SELECT MODEL_ID, MODEL_CODE, MODEL_NAME, SERIES_ID, SERIES_CODE, SERIES_NAME, 
			BRAND_ID, BRAND_CODE, BRAND_NAME FROM (SELECT model.MODEL_ID,model.MODEL_CODE,model.MODEL_NAME, 
			series.SERIES_ID,series.SERIES_CODE,series.SERIES_NAME, brand.BRAND_ID,brand.BRAND_CODE,brand.BRAND_NAME 
			FROM (SELECT DISTINCT m2.GROUP_ID MODEL_ID,m2.GROUP_CODE MODEL_CODE,m2.GROUP_NAME 
			MODEL_NAME,m1.GROUP_ID SERIES_ID_MODEL FROM tm_vhcl_material_group m1,tm_vhcl_material_group 
			m2 WHERE m1.GROUP_ID = m2.PARENT_GROUP_ID AND m2.GROUP_LEVEL = 3 AND m2.STATUS 
			= '10011001' AND m1.GROUP_TYPE = 90081002) model INNER JOIN (SELECT DISTINCT 
			m2.GROUP_ID SERIES_ID, m2.GROUP_CODE SERIES_CODE ,m2.GROUP_NAME SERIES_NAME,m1.GROUP_ID 
			BRAND_ID_SERIES FROM tm_vhcl_material_group m1,tm_vhcl_material_group m2 
			WHERE m1.GROUP_ID = m2.PARENT_GROUP_ID AND m2.GROUP_LEVEL = 2 AND m2.STATUS 
			= '10011001' AND m2.GROUP_TYPE = 90081002 ) series ON model.SERIES_ID_MODEL 
			= series.SERIES_ID INNER JOIN (SELECT DISTINCT m1.GROUP_ID BRAND_ID,m1.GROUP_CODE 
			BRAND_CODE,m1.GROUP_NAME BRAND_NAME FROM tm_vhcl_material_group m1,tm_vhcl_material_group 
			m2 WHERE m1.GROUP_ID = m2.PARENT_GROUP_ID AND m2.GROUP_LEVEL = 2 AND m1.STATUS 
			= '10011001' AND m2.GROUP_TYPE =90081002) brand ON series.BRAND_ID_SERIES 
			= brand.BRAND_ID) BSM -->

		SELECT
		MODEL_ID,
		MODEL_CODE,
		MODEL_NAME,
		SERIES_ID,
		SERIES_CODE,
		SERIES_NAME,
		BRAND_ID,
		BRAND_CODE,
		BRAND_NAME
		FROM
		(
		SELECT
		model.MODEL_ID,
		model.MODEL_CODE,
		model.MODEL_NAME,
		series.SERIES_ID,
		series.SERIES_CODE,
		series.SERIES_NAME,
		brand.BRAND_ID,
		brand.BRAND_CODE,
		brand.BRAND_NAME
		FROM
		(
		SELECT DISTINCT
		m2.GROUP_ID
		MODEL_ID,
		m2.GROUP_CODE MODEL_CODE,
		m2.GROUP_NAME MODEL_NAME,
		m1.GROUP_ID SERIES_ID_MODEL
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID = m2.PARENT_GROUP_ID
		AND
		m2.GROUP_LEVEL = 3
		AND m2. STATUS = '10011001'
		) model
		INNER JOIN (
		SELECT DISTINCT
		m2.GROUP_ID SERIES_ID,
		m2.GROUP_CODE SERIES_CODE,
		m2.GROUP_NAME SERIES_NAME,
		m1.GROUP_ID BRAND_ID_SERIES
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID =
		m2.PARENT_GROUP_ID
		AND m2.GROUP_LEVEL = 2
		AND m2. STATUS = '10011001'
		)
		series ON model.SERIES_ID_MODEL =
		series.SERIES_ID
		INNER JOIN (
		SELECT
		DISTINCT
		m1.GROUP_ID BRAND_ID,
		m1.GROUP_CODE BRAND_CODE,
		m1.GROUP_NAME
		BRAND_NAME
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID = m2.PARENT_GROUP_ID
		AND m2.GROUP_LEVEL = 2
		AND m1.
		STATUS = '10011001'
		) brand ON series.BRAND_ID_SERIES =
		brand.BRAND_ID
		GROUP BY series.SERIES_ID,series.SERIES_CODE,series.SERIES_NAME
		ORDER
		BY series.SERIES_ID,series.SERIES_CODE,series.SERIES_NAME DESC
		)
		BSM

		<if test="require!=null">
			<include refid="Assist" />
		</if>
		LIMIT
		#{startRow},#{rowSize}
	</select>

	<select id="getSeriesTableRowCount" parameterType="com.gacfcasales.common.Assist"
		resultType="java.lang.Long">
		<!-- SELECT count(*) FROM (SELECT model.MODEL_ID,model.MODEL_CODE,model.MODEL_NAME, 
			series.SERIES_ID,series.SERIES_CODE,series.SERIES_NAME, brand.BRAND_ID,brand.BRAND_CODE,brand.BRAND_NAME 
			FROM (SELECT DISTINCT m2.GROUP_ID MODEL_ID,m2.GROUP_CODE MODEL_CODE,m2.GROUP_NAME 
			MODEL_NAME,m1.GROUP_ID SERIES_ID_MODEL FROM tm_vhcl_material_group m1,tm_vhcl_material_group 
			m2 WHERE m1.GROUP_ID = m2.PARENT_GROUP_ID AND m2.GROUP_LEVEL = 3 AND m2.STATUS 
			= '10011001' AND m1.GROUP_TYPE = 90081002) model INNER JOIN (SELECT DISTINCT 
			m2.GROUP_ID SERIES_ID, m2.GROUP_CODE SERIES_CODE ,m2.GROUP_NAME SERIES_NAME,m1.GROUP_ID 
			BRAND_ID_SERIES FROM tm_vhcl_material_group m1,tm_vhcl_material_group m2 
			WHERE m1.GROUP_ID = m2.PARENT_GROUP_ID AND m2.GROUP_LEVEL = 2 AND m2.STATUS 
			= '10011001' AND m2.GROUP_TYPE = 90081002 ) series ON model.SERIES_ID_MODEL 
			= series.SERIES_ID INNER JOIN (SELECT DISTINCT m1.GROUP_ID BRAND_ID,m1.GROUP_CODE 
			BRAND_CODE,m1.GROUP_NAME BRAND_NAME FROM tm_vhcl_material_group m1,tm_vhcl_material_group 
			m2 WHERE m1.GROUP_ID = m2.PARENT_GROUP_ID AND m2.GROUP_LEVEL = 2 AND m1.STATUS 
			= '10011001' AND m2.GROUP_TYPE =90081002) brand ON series.BRAND_ID_SERIES 
			= brand.BRAND_ID) BSM -->
		<!-- ORDER BY BSM.SERIES_CODE,BSM.SERIES_NAME DESC -->

		SELECT
		count(*)
		FROM
		(
		SELECT
		model.MODEL_ID,
		model.MODEL_CODE,
		model.MODEL_NAME,
		series.SERIES_ID,
		series.SERIES_CODE,
		series.SERIES_NAME,
		brand.BRAND_ID,
		brand.BRAND_CODE,
		brand.BRAND_NAME
		FROM
		(
		SELECT DISTINCT
		m2.GROUP_ID
		MODEL_ID,
		m2.GROUP_CODE MODEL_CODE,
		m2.GROUP_NAME MODEL_NAME,
		m1.GROUP_ID SERIES_ID_MODEL
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID =
		m2.PARENT_GROUP_ID
		AND
		m2.GROUP_LEVEL = 3
		AND m2. STATUS = '10011001'
		)
		model
		INNER JOIN (
		SELECT DISTINCT
		m2.GROUP_ID SERIES_ID,
		m2.GROUP_CODE
		SERIES_CODE,
		m2.GROUP_NAME SERIES_NAME,
		m1.GROUP_ID BRAND_ID_SERIES
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID =
		m2.PARENT_GROUP_ID
		AND m2.GROUP_LEVEL = 2
		AND m2. STATUS = '10011001'
		)
		series ON model.SERIES_ID_MODEL =
		series.SERIES_ID
		INNER JOIN (
		SELECT
		DISTINCT
		m1.GROUP_ID BRAND_ID,
		m1.GROUP_CODE BRAND_CODE,
		m1.GROUP_NAME
		BRAND_NAME
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID = m2.PARENT_GROUP_ID
		AND m2.GROUP_LEVEL = 2
		AND m1.
		STATUS = '10011001'
		) brand ON series.BRAND_ID_SERIES =
		brand.BRAND_ID
		GROUP BY series.SERIES_ID,series.SERIES_CODE,series.SERIES_NAME
		ORDER
		BY series.SERIES_ID,series.SERIES_CODE,series.SERIES_NAME DESC
		)
		BSM
		<if test="require!=null">
			<include refid="Assist" />
		</if>
	</select>
	
	<!-- 按车系查询 -->
	<select id="getSeriesTableListA" parameterType="map"
		resultType="com.gacfcasales.common.entity.ModelPage">
		SELECT
		MODEL_ID,
		MODEL_CODE,
		MODEL_NAME,
		SERIES_ID,
		SERIES_CODE,
		SERIES_NAME,
		BRAND_ID,
		BRAND_CODE,
		BRAND_NAME
		FROM
		(
		SELECT
		model.MODEL_ID,
		model.MODEL_CODE,
		model.MODEL_NAME,
		series.SERIES_ID,
		series.SERIES_CODE,
		series.SERIES_NAME,
		brand.BRAND_ID,
		brand.BRAND_CODE,
		brand.BRAND_NAME
		FROM
		(
		SELECT DISTINCT
		m2.GROUP_ID
		MODEL_ID,
		m2.GROUP_CODE MODEL_CODE,
		m2.GROUP_NAME MODEL_NAME,
		m1.GROUP_ID SERIES_ID_MODEL
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID = m2.PARENT_GROUP_ID
		AND
		m2.GROUP_LEVEL = 3
		AND m2. STATUS = '10011001'
		) model
		INNER JOIN (
		SELECT DISTINCT
		m2.GROUP_ID SERIES_ID,
		m2.GROUP_CODE SERIES_CODE,
		m2.GROUP_NAME SERIES_NAME,
		m1.GROUP_ID BRAND_ID_SERIES
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID =
		m2.PARENT_GROUP_ID
		AND m2.GROUP_LEVEL = 2
		AND m2. STATUS = '10011001'
		)
		series ON model.SERIES_ID_MODEL =
		series.SERIES_ID
		INNER JOIN (
		SELECT
		DISTINCT
		m1.GROUP_ID BRAND_ID,
		m1.GROUP_CODE BRAND_CODE,
		m1.GROUP_NAME
		BRAND_NAME
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID = m2.PARENT_GROUP_ID
		AND m2.GROUP_LEVEL = 2
		AND m1.
		STATUS = '10011001'
		) brand ON series.BRAND_ID_SERIES =
		brand.BRAND_ID
		GROUP BY series.SERIES_ID,series.SERIES_CODE,series.SERIES_NAME
		ORDER
		BY series.SERIES_ID,series.SERIES_CODE,series.SERIES_NAME DESC
		)
		BSM
		where 1=1
		<if test="brandIds != null and brandIds.size > 0 ">
			AND BSM.BRAND_ID in
			<foreach collection="brandIds" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>

		</if>
		<if test="seriesIds != null and seriesIds.size > 0 ">
			AND BSM.SERIES_ID in
			<foreach collection="seriesIds" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>

		</if>
		<if test="modelIds != null and modelIds.size > 0 ">
			AND BSM.MODEL_ID in
			<foreach collection="modelIds" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>

		</if>
		LIMIT
		#{startRow},#{rowSize}
	</select>

	<select id="getSeriesTableRowCountA" parameterType="map"
		resultType="java.lang.Long">
		SELECT
		count(*)
		FROM
		(
		SELECT
		model.MODEL_ID,
		model.MODEL_CODE,
		model.MODEL_NAME,
		series.SERIES_ID,
		series.SERIES_CODE,
		series.SERIES_NAME,
		brand.BRAND_ID,
		brand.BRAND_CODE,
		brand.BRAND_NAME
		FROM
		(
		SELECT DISTINCT
		m2.GROUP_ID
		MODEL_ID,
		m2.GROUP_CODE MODEL_CODE,
		m2.GROUP_NAME MODEL_NAME,
		m1.GROUP_ID SERIES_ID_MODEL
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID =
		m2.PARENT_GROUP_ID
		AND
		m2.GROUP_LEVEL = 3
		AND m2. STATUS = '10011001'
		)
		model
		INNER JOIN (
		SELECT DISTINCT
		m2.GROUP_ID SERIES_ID,
		m2.GROUP_CODE
		SERIES_CODE,
		m2.GROUP_NAME SERIES_NAME,
		m1.GROUP_ID BRAND_ID_SERIES
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID =
		m2.PARENT_GROUP_ID
		AND m2.GROUP_LEVEL = 2
		AND m2. STATUS = '10011001'
		)
		series ON model.SERIES_ID_MODEL =
		series.SERIES_ID
		INNER JOIN (
		SELECT
		DISTINCT
		m1.GROUP_ID BRAND_ID,
		m1.GROUP_CODE BRAND_CODE,
		m1.GROUP_NAME
		BRAND_NAME
		FROM
		tm_vhcl_material_group m1,
		tm_vhcl_material_group m2
		WHERE
		m1.GROUP_ID = m2.PARENT_GROUP_ID
		AND m2.GROUP_LEVEL = 2
		AND m1.
		STATUS = '10011001'
		) brand ON series.BRAND_ID_SERIES =
		brand.BRAND_ID
		GROUP BY series.SERIES_ID,series.SERIES_CODE,series.SERIES_NAME
		ORDER
		BY series.SERIES_ID,series.SERIES_CODE,series.SERIES_NAME DESC
		)
		BSM
		where 1=1
		<if test="brandIds != null and brandIds.size > 0 ">
			AND BSM.BRAND_ID in
			<foreach collection="brandIds" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>

		</if>
		<if test="seriesIds != null and seriesIds.size > 0 ">
			AND BSM.SERIES_ID in
			<foreach collection="seriesIds" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>

		</if>
		<if test="modelIds != null and modelIds.size > 0 ">
			AND BSM.MODEL_ID in
			<foreach collection="modelIds" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>

		</if>
	</select>
	
	

	<select id="selectMaxDistrict" resultType="map">
		SELECT DISTINCT
		ORG1.ORG_ID BIG_ORG,ORG1.ORG_NAME BIG_ORG_NAME FROM TM_ORG ORG1
		,TM_ORG ORG2
		WHERE ORG1.ORG_ID = ORG2.PARENT_ORG_ID
		AND ORG1.DUTY_TYPE =
		10431003 AND ORG1.ORG_LEVEL = 2 AND ORG1.IS_DEL=0
	</select>

	<select id="selectMinDistrict" parameterType="java.lang.String"
		resultType="map">
		SELECT ORG2.ORG_ID SMALL_ORG,ORG2.ORG_NAME
		SMALL_ORG_NAME
		FROM TM_ORG ORG1 ,TM_ORG ORG2
		WHERE ORG1.ORG_ID =
		ORG2.PARENT_ORG_ID
		AND
		ORG2.DUTY_TYPE = 10431004 AND ORG2.ORG_LEVEL = 3
		AND ORG1.ORG_ID
		=#{bigOrg}
	</select>


	<select id="selectDealerAll" parameterType="com.gacfcasales.common.Assist"
		resultType="map">
		select * from
		(SELECT
		td.COMPANY_ID,td.DEALER_ID,td.DEALER_CODE,td.DEALER_SHORTNAME,td.MARKETING,td.DEALER_NAME,td.STATUS,td.DEALER_LEVEL,td.ADDRESS,td.DEALER_TYPE
		,ORG2.ORG_NAME AS BIG_ORG,ORG2.ORG_ID AS BIG_ORG_ID,ORG1.ORG_NAME AS
		SMALL_ORG,ORG1.ORG_ID AS SMALL_ORG_ID
		FROM tm_dealer td
		LEFT JOIN
		tm_dealer_org_relation tdor ON tdor.DEALER_ID = td.DEALER_ID
		LEFT JOIN
		tm_org ORG1 ON ORG1.ORG_ID = TDOR.ORG_ID
		LEFT JOIN tm_org
		ORG2 ON
		ORG2.ORG_ID = ORG1.PARENT_ORG_ID
		WHERE td.STATUS = 10011001 and td.DEALER_TYPE=10771001 )
		bsm
		<if test="require!=null">
			<include refid="Assist" />
		</if>
		LIMIT
		#{startRow},#{rowSize}
	</select>

	<select id="selectDealerArrRowCount" parameterType="com.gacfcasales.common.Assist"
		resultType="java.lang.Long">
		select count(*) from
		(SELECT
		td.COMPANY_ID,td.DEALER_ID,td.DEALER_CODE,td.DEALER_SHORTNAME,td.MARKETING,td.DEALER_NAME,td.STATUS,td.DEALER_LEVEL,td.ADDRESS,td.DEALER_TYPE
		,ORG2.ORG_NAME AS BIG_ORG,ORG2.ORG_ID AS BIG_ORG_ID,ORG1.ORG_NAME AS
		SMALL_ORG,ORG1.ORG_ID AS SMALL_ORG_ID
		FROM tm_dealer td
		LEFT JOIN
		tm_dealer_org_relation tdor ON tdor.DEALER_ID = td.DEALER_ID
		LEFT JOIN
		tm_org ORG1 ON ORG1.ORG_ID = TDOR.ORG_ID
		LEFT JOIN tm_org
		ORG2 ON
		ORG2.ORG_ID = ORG1.PARENT_ORG_ID
		WHERE td.STATUS = 10011001 and td.DEALER_TYPE=10771001 )
		bsm
		<if test="require!=null">
			<include refid="Assist" />
		</if>
	</select>

	<select id="getDealerCodeAndName" parameterType="java.lang.String"
		resultType="map">
		select * from tm_vhcl_material_group where GROUP_ID =
		#{groupId}
	</select>
	
	<select id="getDealerCodeAndNameA" parameterType="map"
		resultType="map">
		select * from tm_vhcl_material_group where 1=1
		<if test="groupIds != null and groupIds.size > 0 ">
			AND GROUP_ID  in
			<foreach collection="groupIds" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>

		</if>
	</select>


</mapper>